body, ul , li , p{
    margin: 0;
    padding: 0;
    list-style: none;
    font-size: 1.2rem;
    font-family: arial;
}

a{
    text-decoration: none;
    color: white;
}

body{
    margin-bottom: 100px;
}
.header{
    background: black;
    


    /*quero itens lado a lado*/
    display: flex;
    /*por padrão display: flex recebe direction row*/
    /*agora eu quero separar os itens um para lado e outro para o outro do header*/
    justify-content: space-between;
    /*se fosse space-around iria cria um espaço antes do inicio e antes do fim*/
    padding: 20px;
    /*padding(apenas com um valor referenciando todas as direções) ao invés para tornar esse espaço especifico*/
    align-items: center;
    /*alinhando os itens de acordo com o tamanho da box*/
    flex-wrap: wrap;
    /*significando que quando a tela ficar pequena vai wrapar os itens para baixo*/
}

.menu{
    display: flex;
    /*tornando o meno um novo flex-iten*/
}

.menu li{
   /*criando separação entre os itens*/
   margin-left: 10px;
}

.menu li a{
    /*aumentando a superficie de clicagem para facilitar o usuario*/
    /*com o uso do padding afastando o link um pouco das bordas*/
    display: block;
    padding: 10px;
}

h1{
    text-align: center;
    margin-top: 100px;
}

/*tornando as imagens responsivas*/
img{
    max-width: 100%;
    /*com o tamanho maximo 100% se expande até o maximo de 100% do tamanho do container*/
    /*ao diminuir a resolução a imagem acompanha e se expandem até seu tamanho máximo*/
    display: block;

}

/*CSS FLEXBOX 1*/

.flex{
    /*alinhando todos os itens lado a lado (imagem e legenda)*/
    display: flex;
    flex-wrap: wrap;
    /*quebrando a linha*/
    max-width: 800px;
    /*quero que meu container se expanda até no máximo 800px de largura*/
    margin: 0 auto;
    /*alinha ao centro quando passa dos 800 px de expansão*/

}

.flex > div{
    flex: 1 1 200px;
    /*a div se expande,diminui e tem uma base de 200px*/
    margin: 10px;
    /*colocando uma margem entre os itens para cado lado de 10px*/
}

/*CSS GRID 1*/

.grid1{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /*o fr é uma unidade fracional usando ele é como se estivesse divindo 100% em 3 partes(33% cada)*/
    /*tenho 3 colunas de 33%*/
    max-width: 780px;
    /*maximo de largura para a div*/
    margin: 0 auto;
    /*alinhando ao centro de acordo com as laterais*/
    grid-gap: 20px;
    /*espaçamento entre os itens*/
}
/*quero selecionar divs especificas para alteração
para isso posso usar o nth-child, usando o (n+4) eu informo que a partir do quinto item
eu realizo as alterações*/
.grid1 > div:nth-child(n + 4){
   display: grid;
   grid-template-columns: repeat(2, 1fr);
   grid-gap: 10px;
   align-items: center;
}

.grid1 > div.anuncio{
    grid-column: 1;
    grid-row: 2/5;
    display: block;
}
/*tudo que for abaixo de 600 px aplica as mudanças*/
@media(max-width: 600px){
    .grid1{
        grid-template-columns: repeat(2, 1fr);
    }

    .grid1 > div:nth-child(n + 4){
        display: block;
        /*resetando e inibindo as propiedades do display grid*/
    }

    .grid1 > div.anuncio{
        grid-column: auto;
        grid-row: auto;
        /*informando para que o anuncio siga as regras dos novos template colums de 1fr 1fr*/
        order:-1;
        /*mostrando anuncio como primeiro item na div(-1 porque todos vao ser 0 por padrão)*/
    }
}

/*CSS GRID 2*/

.grid2{
    display:grid;
    grid-template-columns: 1fr 200px;
    /*divisão entre class video|sidebar*/
    /*nessa configuração de grid minha coluna da direita não se movimenta de acordo com com a página
    permanece 200px(sidebar)*/
    grid-gap: 20px;
    /*espaço entre os grids*/
    max-width: 800px;
    /*o maximo que ele cresce, aplicandoa lógica da coluna que se adapta*/
    padding:10px;
    /*espaço entre as bordas*/
    margin: 0 auto;
    /*centralizando*/
}

.sidebar > div{
    margin-bottom: 10px;
    /*separando os itens dentro do sidebar*/
}

@media(max-width: 600px){
    .grid2{
        grid-template-columns: 1fr;
        /*transforma o grid que estava dividido em dois em apenas uma coluna*/
    }
    .sidebar{
        display: flex;
        /*a partir de 600px tudo aquilo que recebia propiedade em coluna vira 1 coluna com os itens
        em display flex padrão */
        overflow: scroll;
    }
    .sidebar > div{
        flex: 1 1 200px;
        /*a div se expande,diminui e tem uma base de 200px*/
       margin: 0 10px;
    }
    
}

/*CSS GRID 3*/

.grid3{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap:20px;
    margin: 0 auto;
    max-width: 800px;
    padding: 10px;
}

.grid3-iten:nth-child(1){
     /*seleciona o primeiro filho em ordem da classe grid3-iten*/
     grid-row: 1/3;
     /*fala que ele vai ocupar da ->linha<- 1 à 3 em tamanho do grid*/
}

.grid3-iten{
    display: grid;
    /*dentro das divs dos itens coloca dsplay grid e forma como se fosse uma coluna unica*/
}

.grid3-iten img{
    grid-column: 1;
    /*imagem na coluna unica*/
    grid-row: 1/3;
    /*na logica das linhas é como se tivesse uma que separasse a imagem e a legenda, dessa forma
    eu informo que minha imagem vai ocupar desde a inicial até a final, passando pela do meio*/
    align-self: end;
    /*alinha ao final*/
}

.grid3-iten p{
    background: rgba(0, 0, 0, 0.6);
    /*background semi-transparente no paragrafo*/
    padding: 10px;
    color: white;
    /*espaço e cor da fonte*/
     grid-column: 1;
    /*separa e posiciona o item na primeira coluna igualmente*/
    grid-row: 2;
    /*infomra exatamente linha 2 assim ficando por cima da imagem*/
    align-self: end;
}